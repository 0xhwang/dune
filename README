Overview
========

Dune is a system that lets you safely run applications in Ring 0 by using
hardware virtualization.  This lets applications access privileged CPU features
and do things like change their own page table, register interrupt handlers and
more, while still being able to perform normal system calls.  More information
here:

	http://dune.scs.stanford.edu/

Dune has three components:

1.  A kernel module to enable virtualization (kern)
2.  A library OS to help using Dune (libdune)
3.  A glibc patch for Dune enabled applications (eglibc-2.14).  This does not
    need to be installed globally.

Dune is enabled only on applications that call dune_init().  All other
applications on the system remain unaffected.

Install
=======

# make
# insmod kern/dune.ko
# ./dune-env.sh test/hello

The dune-env.sh script runs Dune applications with the Dune glibc (instead of
the system's) through LD_PRELOAD.

The first compile will take a long time because it needs to compile glibc.  Dune
compilation is otherwise fast.

Programming
===========

1.  Call dune_init() to enter dune mode.  (Link to libdune.)
2.  The application will continue to function as normal.  You can use glibc,
    sockets, files, etc.  (LD_PRELOAD Dune's glibc.)
3.  But you can now perform privileged CPU instructions!
